{{ define "students"}}
<div class="row p-2">
  <div class="col-md-2"> 
    Borrowed Books
  </div>   
</div>

<div class="row">
  <div class="col-md-4">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addStudentModal">Add Student</button>
  </div>
</div>

<div class="row">
  <table border="1" class="table table-striped table-bordered dt-responsive table-hover" id="example2" width="100%">
    <thead>
      <tr width="100%">
        <th align="center">Student ID</th>
        <th align="center">Student Name</th>
        <th align="center">Department</th>
      </tr>
    </thead> 
    <tbody>
      {{ range .students }}
      <tr>
        <td>{{ .StudentID }}</td>
        <td>{{ .Name }}</td>
        <td>{{ .Department }}</td>
        <td>
          {{/* <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#editStudentModal{{ .StudentID }}">Edit</button>
          <button class="btn btn-danger btn-sm" onclick="deleteStudent({{ .StudentID }})">Delete</button> */}}
          <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editStudentModal{{ .StudentID }}">Edit</button>
          <button class="btn btn-danger" onclick="deleteStudent({{ .StudentID }})">Delete</button>
          <div class="modal fade" id="editStudentModal{{ .StudentID }}" tabindex="-1" aria-labelledby="editStudentModalLabel{{ .StudentID }}" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editStudentModalLabel{{ .StudentID }}">Edit Student</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <form id="editStudentForm{{ .StudentID }}" action="/editStudent/{{ .StudentID }}" method="POST">
                    <div class="form-floating">
                      <input type="text" class="form-control" id="editName{{ .StudentID }}" name="name" placeholder="Name" required value="{{ .Name }}">
                      <label for="editName{{ .StudentID }}">Name</label>
                    </div>
                    <div class="form-floating">
                      <input type="text" class="form-control" id="editDepartment{{ .StudentID }}" name="department" placeholder="Department" required value="{{ .Department }}">
                      <label for="editDepartment{{ .StudentID }}">Department</label>
                    </div>
                    <button type="button" class="btn btn-primary mt-3" onclick="saveEditedStudent({{ .StudentID }})">Save</button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </td>
      </tr>
      {{ end }}
    </tbody>
  </table> 
</div>

<!-- Add Student Modal -->
<div class="modal fade" id="addStudentModal" tabindex="-1" aria-labelledby="addStudentModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addStudentModalLabel">Add New Student</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form method="POST" action="/addStudent">
          {{/* <div class="form-floating">
            <input type="text" class="form-control" id="studentID" name="studentID" placeholder="Student ID" readonly>
            <label for="studentID">Student ID</label>
          </div> */}}
          <div class="form-floating">
            <input type="text" class="form-control" id="name" name="name" placeholder="Name" required>
            <label for="name">Name</label>
          </div>
          <div class="form-floating">
            <input type="text" class="form-control" id="department" name="department" placeholder="Department" required>
            <label for="department">Department</label>
          </div>
          <button type="submit" class="btn btn-primary mt-3">Add</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const addStudentForm = document.getElementById("addStudentForm");
    const addStudentButton = document.getElementById("addStudentButton");

    addStudentButton.addEventListener("click", function() {
      // Prevent the default form submission
      event.preventDefault();

      // Use AJAX to submit the form data
      fetch("/addStudent", {
        method: "POST",
        body: new FormData(addStudentForm)
      })
      .then(response => response.text())
      .then(data => {
      // Reload the page after successful addition
      location.reload();
      })
      .catch(error => {
        console.error("Error:", error);
      });
    });
  });

  function saveEditedStudent(studentID) {
    const editStudentForm = document.getElementById(`editStudentForm${studentID}`);
    const editNameInput = document.getElementById(`editName${studentID}`);
    const editDepartmentInput = document.getElementById(`editDepartment${studentID}`);

    // Validate form data
    if (!editNameInput.value || !editDepartmentInput.value) {
        alert("Please fill in all fields.");
        return;
    }

    // Use AJAX to submit the form data with POST method
    fetch(`/editStudent/${studentID}`, {
        method: "POST",
        body: new FormData(editStudentForm)
    })
    .then(response => response.text())
    .then(data => {
        // Handle success, close the modal, or update/refresh the student list
        location.reload();
    })
    .catch(error => {
        console.error("Error:", error);
    });
}

  function deleteStudent(studentID) {
      if (confirm("Are you sure you want to delete this student?")) {
          // Use AJAX to send a DELETE request
          fetch(`/deleteStudent?studentID=${studentID}`, {
              method: "DELETE"
          })
          .then(response => response.text())
          .then(data => {
              // Handle success, update the student list or refresh the page
              location.reload();
          })
          .catch(error => {
              console.error("Error:", error);
          });
      }
  }
</script>
{{ end }}
