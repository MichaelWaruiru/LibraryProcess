{{ define "books" }}
<div class="row p-2">
  <div class="col-md-2"> 
    Books
  </div>   
</div>

<!-- Add Books Button -->
<div class="row">
  <div class="col-md-4">
    <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addBookModal">
      Add New Book
    </button>
  </div>
</div>

<div class="row">
  <table border="1" class="table table-striped table-bordered dt-responsive table-hover" id="example2" width="100%">
    <thead>
      <tr width="100%">
        <th align="center">Book ID</th>
        <th align="center">Name</th>
        <th align="center">Author</th>
        <th align="center">Genre</th>
        <th align="center">Category</th>
      </tr>
    </thead> 
    <tbody>
      {{ range .books }}
      <tr>
        <td>{{ .BookID }}</td>
        <td>{{ .Name }}</td>
        <td>{{ .Author }}</td>
        <td>{{ .Genre }}</td>
        <td>{{ .Category }}</td>
        <td>
          <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editBookModal{{ .BookID }}">Edit</button>
          <button class="btn btn-danger" onclick="deleteBook({{ .BookID }})">Delete</button>
          <div class="modal fade" id="editBookModal{{ .BookID }}" tabindex="-1" aria-labelledby="editBookModalLabel{{ .BookID }}" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editBookModalLabel{{ .BookID }}">Edit Book</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <form id="editBookForm{{ .BookID }}" action="/editBook/" method="POST">
                    <div class="form-floating">
                      <input type="text" class="form-control" id="editedName{{ .BookID }}" name="name" placeholder="Name" required value="{{ .Name }}">
                      <label for="editedName{{ .BookID }}">Name</label>
                    </div>
                    <div class="form-floating">
                      <input type="text" class="form-control" id="editedAuthor{{ .BookID }}" name="author" placeholder="Author" required value="{{ .Author }}">
                      <label for="editedAuthor{{ .BookID }}">Author</label>
                    </div>
                    <div class="form-floating">
                      <input type="text" class="form-control" id="editedGenre{{ .BookID }}" name="genre" placeholder="Genre" required value="{{ .Genre }}">
                      <label for="editedGenre{{ .BookID }}">Genre</label>
                    </div>
                    <div class="form-floating">
                      <input type="text" class="form-control" id="editedCategory{{ .BookID }}" name="category" placeholder="Category" required value="{{ .Category }}">
                      <label for="editedCategory{{ .BookID }}">Category</label>
                    </div>
                    <button type="button" class="btn btn-primary mt-3" onclick="saveEditedBook({{ .BookID }})">Save</button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </td>
      </tr>
      {{ end }}
    </tbody>
  </table> 
</div>

<!-- Add Book Modal -->
<div class="modal fade" id="addBookModal" tabindex="-1" aria-labelledby="addBookModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addBookModalLabel">Add New Book</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form method="POST" action="/addBook">
        {{/* <div class="form-floating">
            <input type="text" class="form-control" id="BookID" name="BookID" placeholder="Book ID" readonly>
            <label for="BookID">Book ID</label>
          </div> */}}
          <div class="form-floating">
            <input type="text" class="form-control" id="name" name="name" placeholder="Name" required>
            <label for="name">Name</label>
          </div>
          <div class="form-floating">
            <input type="text" class="form-control" id="author" name="author" placeholder="Author" required>
            <label for="author">Author</label>
          </div>
          <div class="form-floating">
            <input type="text" class="form-control" id="genre" name="genre" placeholder="Genre" required>
            <label for="genre">Genre</label>
          </div>
          <div class="form-floating">
            <input type="text" class="form-control" id="category" name="category" placeholder="Category" required>
            <label for="category">Category</label>
          </div>
          <button type="submit" class="btn btn-primary mt-3">Add</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const addBookForm = document.getElementById("addBookForm");

    addBookForm.addEventListener("submit", async function(event) {
      event.preventDefault();

      const formData = new FormData(addBookForm);
      const response = await fetch(addBookForm.action, {
        method: "POST",
        body: formData,
      });

      if (response.ok) {
        console.log("Book added successfully");
      } else {
        console.error("Failed to add book");
      }

      // Close the modal
      const addBookModal = new bootstrap.Modal(document.getElementById("addBookModal"));
      addBookModal.hide();
    });
  });

  function saveEditedBook(bookID) {
    const editBookForm = document.getElementById(`editBookForm${bookID}`);
    const editedNameInput = document.getElementById(`editedName${bookID}`);

    // Validate form data
    if (!editedNameInput.value) {
      alert("Please fill in all fields.");
      return;
    }

    // Use AJAX to submit the form data with POST method
    fetch(`/editBook/${bookID}`, {
      method: "POST",
      body: new FormData(editBookForm),
    })
      .then((response) => response.text())
      .then((data) => {
        // Handle success, close the modal, or update/refresh the book list
        location.reload();
      })
      .catch((error) => {
        console.error("Error:", error);
      });
  }

  function deleteBook(bookID) {
    if (confirm("Are you sure you want to delete this book?")) {
      // Use AJAX to send a delete request
      fetch(`/deleteBook?bookID=${bookID}`, {
        method: "DELETE",
      })
        .then((response) => response.text())
        .then((data) => {
          // Handle success, update the book list or refresh the page
          location.reload();
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    }
  }
</script>
{{ end }}